<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Cars extends \AppBundle\Entity\Cars implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'model', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'mark', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'price', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'engine', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'power', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'enginetype', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'year', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'bodytype', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'id_user'];
        }

        return ['__isInitialized__', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'id', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'model', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'mark', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'price', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'engine', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'power', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'enginetype', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'description', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'year', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'bodytype', '' . "\0" . 'AppBundle\\Entity\\Cars' . "\0" . 'id_user'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Cars $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setModel($model)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModel', [$model]);

        return parent::setModel($model);
    }

    /**
     * {@inheritDoc}
     */
    public function getModel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModel', []);

        return parent::getModel();
    }

    /**
     * {@inheritDoc}
     */
    public function setMark($mark)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMark', [$mark]);

        return parent::setMark($mark);
    }

    /**
     * {@inheritDoc}
     */
    public function getMark()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMark', []);

        return parent::getMark();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice($price)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        return parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', []);

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setEngine($engine)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEngine', [$engine]);

        return parent::setEngine($engine);
    }

    /**
     * {@inheritDoc}
     */
    public function getEngine()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEngine', []);

        return parent::getEngine();
    }

    /**
     * {@inheritDoc}
     */
    public function setPower($power)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPower', [$power]);

        return parent::setPower($power);
    }

    /**
     * {@inheritDoc}
     */
    public function getPower()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPower', []);

        return parent::getPower();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setYear($year)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYear', [$year]);

        return parent::setYear($year);
    }

    /**
     * {@inheritDoc}
     */
    public function getYear()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYear', []);

        return parent::getYear();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnginetype($enginetype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnginetype', [$enginetype]);

        return parent::setEnginetype($enginetype);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnginetype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnginetype', []);

        return parent::getEnginetype();
    }

    /**
     * {@inheritDoc}
     */
    public function setBodytype($bodytype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBodytype', [$bodytype]);

        return parent::setBodytype($bodytype);
    }

    /**
     * {@inheritDoc}
     */
    public function getBodytype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBodytype', []);

        return parent::getBodytype();
    }

    /**
     * {@inheritDoc}
     */
    public function setImage($image)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImage', [$image]);

        return parent::setImage($image);
    }

    /**
     * {@inheritDoc}
     */
    public function getImage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImage', []);

        return parent::getImage();
    }

    /**
     * {@inheritDoc}
     */
    public function setId_user($id_user)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId_user', [$id_user]);

        return parent::setId_user($id_user);
    }

    /**
     * {@inheritDoc}
     */
    public function getId_user()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId_user', []);

        return parent::getId_user();
    }

}
